syntax = "proto3";

package product;
option go_package="./product";

service Product {
    rpc GetProducts(GetProductsRequest) returns(GetProductsResponse);
    rpc ListProducts(ListProductsRequest) returns(ListProductsResponse);
    rpc OperateProducts(OperateProductsRequest) returns (OperateProductsResponse);
    rpc UpdateProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
    rpc CheckProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
    rpc CheckAndUpdateStock(CheckAndUpdateStockRequest) returns (CheckAndUpdateStockResponse);
    rpc RollbackProductStock(UpdateProductStockRequest) returns (UpdateProductStockResponse);
    rpc DecStock(DecStockRequest) returns(DecStockResponse);
    rpc DecStockRevert(DecStockRequest) returns(DecStockResponse);
}

message GetProductsRequest {
    string product_ids = 1;
}

message GetProductsResponse {
    repeated products = 1;
}

message ProductItem {
    int64 product_id = 1;
    string name = 2;
    string description = 3;
    string image_url = 4;
    int64 create_time = 5;
    int64 stock = 6;
    int64 category_id = 7;
    double price = 8;
    int64 status = 9;
}

message ListProductsRequest {
    int32 category_id = 1;
    int64 cursor = 2;
    int32 page_size = 3;
    int64 product_id = 4;
}

message ListProductsResponse {
    bool is_end = 1;
    int64 time_stamp = 2;
    int64 product_id = 3;
    repeated ProductItem products = 4;
}

message OperateProductsRequest {
}

message OperateProductsResponse {
    repeated ProductItem products = 1;
}

message UpdateProductStockRequest {
    int64 product_id = 1;
    int64 num = 2;
}

message UpdateProductStockResponse {
}

message CheckAndUpdateStockRequest {
    int64 product_id = 1;
}

message CheckAndUpdateStockResponse {
}

message DecStockRequest {
    int64 id = 1;
    int64 num = 2;
}

message DecStockResponse {
}