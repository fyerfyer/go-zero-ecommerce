// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: order.proto

package orderclient

import (
	"context"

	"github.com/fyerfyer/go-zero-ecommerce/ecommerce/order/rpc/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOrderCheckRequest  = order.CreateOrderCheckRequest
	CreateOrderCheckResponse = order.CreateOrderCheckResponse
	ListOrdersRequest        = order.ListOrdersRequest
	ListOrdersResponse       = order.ListOrdersResponse
	OrderItem                = order.OrderItem
	SubmitOrderDTMRequest    = order.SubmitOrderDTMRequest
	SubmitOrderDTMResponse   = order.SubmitOrderDTMResponse

	Order interface {
		ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error)
		SubmitOrderDTM(ctx context.Context, in *SubmitOrderDTMRequest, opts ...grpc.CallOption) (*SubmitOrderDTMResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.ListOrders(ctx, in, opts...)
}

func (m *defaultOrder) SubmitOrderDTM(ctx context.Context, in *SubmitOrderDTMRequest, opts ...grpc.CallOption) (*SubmitOrderDTMResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.SubmitOrderDTM(ctx, in, opts...)
}
