// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: payment.proto

package server

import (
	"context"

	"github.com/fyerfyer/go-zero-ecommerce/ecommerce/payment/rpc/internal/logic"
	"github.com/fyerfyer/go-zero-ecommerce/ecommerce/payment/rpc/internal/svc"
	"github.com/fyerfyer/go-zero-ecommerce/ecommerce/payment/rpc/payment"
)

type PaymentServer struct {
	svcCtx *svc.ServiceContext
	payment.UnimplementedPaymentServer
}

func NewPaymentServer(svcCtx *svc.ServiceContext) *PaymentServer {
	return &PaymentServer{
		svcCtx: svcCtx,
	}
}

func (s *PaymentServer) InitPayment(ctx context.Context, in *payment.InitPaymentRequest) (*payment.InitPaymentResponse, error) {
	l := logic.NewInitPaymentLogic(ctx, s.svcCtx)
	return l.InitPayment(in)
}

func (s *PaymentServer) VerifyPayment(ctx context.Context, in *payment.VerifyPaymentRequest) (*payment.VerifyPaymentResponse, error) {
	l := logic.NewVerifyPaymentLogic(ctx, s.svcCtx)
	return l.VerifyPayment(in)
}

func (s *PaymentServer) RefundPayment(ctx context.Context, in *payment.RefundPaymentRequest) (*payment.RefundPaymentResponse, error) {
	l := logic.NewRefundPaymentLogic(ctx, s.svcCtx)
	return l.RefundPayment(in)
}
