// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: cart.proto

package cartclient

import (
	"context"

	"github.com/fyerfyer/go-zero-ecommerce/ecommerce/cart/rpc/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddToCartRequest       = cart.AddToCartRequest
	AddToCartResponse      = cart.AddToCartResponse
	CartItem               = cart.CartItem
	ListCartItemsRequest   = cart.ListCartItemsRequest
	ListCartItemsResponse  = cart.ListCartItemsResponse
	RemoveFromCartRequest  = cart.RemoveFromCartRequest
	RemoveFromCartResponse = cart.RemoveFromCartResponse

	Cart interface {
		AddToCart(ctx context.Context, in *AddToCartRequest, opts ...grpc.CallOption) (*AddToCartResponse, error)
		RemoveFromCart(ctx context.Context, in *RemoveFromCartRequest, opts ...grpc.CallOption) (*RemoveFromCartResponse, error)
		ListCartItems(ctx context.Context, in *ListCartItemsRequest, opts ...grpc.CallOption) (*ListCartItemsResponse, error)
	}

	defaultCart struct {
		cli zrpc.Client
	}
)

func NewCart(cli zrpc.Client) Cart {
	return &defaultCart{
		cli: cli,
	}
}

func (m *defaultCart) AddToCart(ctx context.Context, in *AddToCartRequest, opts ...grpc.CallOption) (*AddToCartResponse, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.AddToCart(ctx, in, opts...)
}

func (m *defaultCart) RemoveFromCart(ctx context.Context, in *RemoveFromCartRequest, opts ...grpc.CallOption) (*RemoveFromCartResponse, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.RemoveFromCart(ctx, in, opts...)
}

func (m *defaultCart) ListCartItems(ctx context.Context, in *ListCartItemsRequest, opts ...grpc.CallOption) (*ListCartItemsResponse, error) {
	client := cart.NewCartClient(m.cli.Conn())
	return client.ListCartItems(ctx, in, opts...)
}
